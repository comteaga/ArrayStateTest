name: Node.js CI

on:
  push:
    branches: ['main']

jobs:
  # build:
  #   runs-on: ubuntu-latest
  #   name: Build artifact
  #   strategy:
  #     matrix:
  #       node-version: [16.x]

  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: Use Node.js ${{ matrix.node-version }}
  #       uses: actions/setup-node@v3
  #       with:
  #         node-version: ${{ matrix.node-version }}
  #         cache: 'npm'

  #     - name: Installing dependencies
  #       run: npm ci

  #     - name: Build project
  #       run: CI=false npm run build --if-present

  #     - name: Creating deployment artifact
  #       env:
  #         GITHUB_SHA: ${{ github.sha }}
  #       run: tar -czf "${GITHUB_SHA}".tar.gz build

  #     - name: Storing artifact
  #       uses: actions/upload-artifact@v2
  #       with:
  #         name: app-build
  #         path: ${{ github.sha }}.tar.gz

  connect-vpn:
    runs-on: ubuntu-latest
    # needs: build
    name: Upload to server
    steps:
      - uses: actions/checkout@v3
      - name: Install OpenVPN
        run: |
          sudo apt-get update
          sudo apt-get --assume-yes --no-install-recommends install openvpn

      - name: Setup VPN config
        run: |
          echo "${{ secrets.CA_CRT }}" > ca.crt
          echo "${{ secrets.TLS_KEY }}" > tls.key
          echo "${{ secrets.AUTH }}" > auth.txt

      - name: Connect VPN
        run: sudo openvpn --config ".github/vpn/config.ovpn" --log "vpn.log" --daemon

      # with vpn log file
      # - name: Connect VPN
      #   run: sudo openvpn --config ".github/vpn/config.ovpn" --daemon

      - name: Wait for a VPN connection
        timeout-minutes: 1
        run: until ping -c 1 ${{ secrets.SERVER_ADDRESS }}; do sleep 2; done

      # DEPLOY AQUI
      # - uses: actions/download-artifact@v2
      #   name: Downloading artifact
      #   with:
      #     name: app-build
      # - name: Uploading to server
      #   uses: appleboy/scp-action@master
      #   with:
      #     host: ${{ secrets.HOST }}
      #     username: ${{ secrets.USERNAME }}
      #     key: ${{ secrets.KEY }}
      #     port: 22
      #     source: ${{ github.sha }}.tar.gz
      #     target: /tmp/
      # - name: Extracting files
      #   uses: appleboy/ssh-action@master
      #   with:
      #     host: ${{ secrets.HOST }}
      #     username: ${{ secrets.USERNAME }}
      #     key: ${{ secrets.KEY }}
      #     port: 22
      #     script: |
      #       mkdir -p /home/project/releases/${{ github.sha }}
      #       tar -xzf /temp/${{ github.sha }}.tar.gz -C /home/project/releases/${{ github.sha }}
      - name: Kill VPN connection
        if: always()
        run: |
          sudo killall openvpn

        # with vpn log file
        # run: |
        #   sudo chmod 777 vpn.log
        #   sudo killall openvpn

      # with vpn log file
      # - name: Upload VPN logs
      #   uses: actions/upload-artifact@v2
      #   if: always()
      #   with:
      #     name: VPN logs
      #     path: vpn.log
